# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# rust-clippy is a tool that runs a bunch of lints to catch common
# mistakes in your Rust code and help improve your Rust code.
# More details at https://github.com/rust-lang/rust-clippy 
# and https://rust-lang.github.io/rust-clippy/

name: rust-clippy analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]

jobs:
  rust-clippy-analyze:
    if: "! contains(toJSON(github.event.commits.*.message), '[ci skip]')"
 
    name: Run rust-clippy analyzing
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status 
    steps:
      - name: Cache
        uses: actions/cache@v3.0.11
        with:
          # A directory to store and save the cache
          path: cache
          # An explicit key for restoring and saving the cache
          key: cache
    
      - name: Checkout code
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af #@v1
        with:
          profile: minimal
          toolchain: nightly
          components: clippy
          override: true

      - name: Cache Cargo packages
        uses: actions/cache@v3.0.11
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo

      - name: Install required cargo
        run: cargo install clippy-sarif sarif-fmt

      - name: Run rust-clippy
        run:
          cargo clippy
          --all-features
          --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2.11.2
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true

      - name: Upload Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: hypixel-skyblock-util-tools
          path: target/debug/hypixel-skyblock-util-tools

